
precedence left MAYORK, MENORK, MAYORIK, MENORIK, EQUALS,DISTINTO,NOT;
precedence left OR;
precedence left AND;
precedence left MENOS;
precedence left MAS;
precedence left MULTI;
precedence left MAS;
precedence left MULTI;
precedence left PORCENTAJE, DIVISION;
precedence left POTENCIA;

inicio ::= "VOID"  "MAIN" "(" ")" "{"  lista_instr:lista "}"    
lista_instr ::= lista_instr instruccion
    | instruccion
instruccion ::= instr_mostrar "PCOMA"
    | if
    |asignacion ";" 
    |error PCOMA  
    |while
    |dowhile
    |actualizacion
    |for
    |switch
    | "BREAK" ";"    
    |globales
     |gBarras                                 
    |gPie                                 
if ::= "IF"  "(" expresion ")" "{"  lista_instr  "}" 
             |"IF"  "(" expresion ")" "{"  lista_instr  "}"  "ELSE" "{"  lista_instr  "}" 
              |"IF"  "(" expresion ")" "{"  lista_instr  "}"  "ELSE"  if
while ::=  "WHILE"  "(" expresion ")" {"  lista_instr  "}"   

dowhile ::=  "DO" {"  lista_instr  "}"      "WHILE"  "(" expresion ")"  ";"    
actualizacion ::= ID  "="  expresion ";"
instr_mostrar ::= "CONSOLE.WRITE" "(" expresion ")"   
asignacion ::=  tipoDato ID 
                        |tipoDato  ID:id1   "="  expresion 
tipoDato  ::= "CHAR"  |"BOOL"    |"INT"   |"STRING"  | "DOUBLE" 
expresion ::=NOT expresion  
                    |expresion  "&&" expresion
                    | expresion  "||"  expresion:val2 
                    | expresion  "<" expresion 
                    | expresion  ">" expresion 
                    | expresion  "<=" expresion 
                    | expresioN  "=>" expresion 
                    | expresion  "!=" expresion 
                    | expresion "=" "=" expresion
                    |aritmetico


aritmetico ::= aritmetico "^"  aritmetico 
                      | aritmetico  "/"  aritmetico
                      | aritmetico  "*"  aritmetico
                      | aritmetico  "+"   aritmetico
                      | aritmetico  "-"  aritmetico
                      | aritmetico  "%"  aritmetico
                      |NUM
                      |ID
                      |STRING
                      |"TRUE"
                      |"FALSE"
                      |CHAR



for ::= "FOR" "(" tipoDato ID "=" expresion ";" condicionFor ";" masMenos ")" "{"  lista_instr  "}"




condicionFor ::= expresion ">" expresion
                        |expresion "<" expresion
                        |expresion ">=" expresion
                        |expresion "<="  expresion 
                       | NUM


masMenos ::= ID "+" "+" 
                       |ID "-" "-" 


switch ::= "SWITCH" "("  ID ")" "{" cases   "DEFAULT"  ":"  lista_instr "}"


cases ::=  "CASE" expresion  ":"  lista_instr
              |cases  "CASE" expresion  ":"  lista_instr



globales ::= "VOID" "DEFINIRGLOBALES"   "("   ")"  "{" instG  "}"


instG ::= instG asigGlob
                |asigGlob


asigGlob ::= "STRING"  ID "="  STRING ";"
                    | "STRING"  ID "="  newValue ";"
                    |"DOUBLE"  ID "="  NUM ";"
                    ||"DOUBLE"  ID "="  newValue ";

newValue ::= "$" "{" "NEWVALOR"  "," STRING  "," STRING  "}"


gBarras ::= "VOID" "GRAFICARBARRAS"   "("   ")"  "{" listBarras  "}"


listBarras ::= listBarras instBarras 
                    |instBarras

instBarras ::= "STRING" "TITULO" "=" expBarras ";" 
                    |"STRING" "TITULOX" "=" expBarras ";" 
                    |"STRING" "TITULOY" "=" expBarras ";" 
                    |"STRING" "[ ]"  "EJEX" "=" listDatos ";" 
                    |"DOUBLE" "[ ]"  "VALORES" "=" listDatos1 ";" 
                    |asigBarras
;
asigBarras ::= tipoDato ID "="  expBarras


expBarras::= newValue
                |STRING
                |NUM
                |ID


listDatos ::= "{" datitos   "}" 

  
datitos ::=datitos "," datoos
                |datoos


datoos::= newValue                    
                |STRING
                |ID
listDatos1::= "{" datitos1   "}" 

  
datitos1 ::=datitos1 "," datoos1
                |datoos1


datoos1::= newValue
                |NUM
                |ID

gPie ::= "VOID" "GRAFICAPIE"   "("   ")"  "{" listPie  "}"


listPie ::= listPie instPie 
                    |instPie

instPie ::=  "STRING" "TITULO" "=" expBarras ";" 
                    |"STRING" "[ ]"  "EJEX" "=" listDatos2 ";" 
                    |"DOUBLE" "[ ]"  "VALORES" "=" listDatos3 ";" 


listDatos2 ::= "{" datitos2   "}" 

  
datitos2 ::=datitos2 "," datoos2
                |datoos2

datoos2::= newValue                    
                |STRING
                |ID



listDatos3::= "{" datitos3   "}" 
;
  
datitos3 ::=datitos3 "," datoos3
                |datoos3
;

datoos3::= newValue
                |NUM
                |ID


<num> ::=  [0-9]+(\.[0-9]*)?

<ID> =  [a-zA-Z_][a-zA-Z0-9_]+
<CHAR> = (\"  [^\'\"] \")|{"\\\""|"\\\'"|"\\n"}
<FLECHA> = "-" " "* ">"
<ESP> = [ -/:@\[-`{-}]
<COMMENT_MULTILINE>="<!" ([^!] | ("!" [^\>]))+ "!>"
<STRING> = \" ([^\"]|"\\\"")+ \"


